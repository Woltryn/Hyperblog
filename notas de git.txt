							Los 50 ComandoS de Git Mas Utilizados
Cómo verificar su configuración de Git:
El siguiente comando devuelve una lista de información sobre su configuración de git, incluido el nombre de usuario y el correo electrónico:

1.	git config -l

Cómo configurar su nombre de usuario de Git:
Con el siguiente comando puedes configurar tu nombre de usuario:

2.	git config --global user.name "Fabio"

Cómo configurar su correo electrónico de usuario de Git:
Este comando le permite configurar la dirección de correo electrónico del usuario que utilizará en sus confirmaciones.

3. 	git config --global user.email "signups@fabiopacifici.com"

Cómo almacenar en caché sus credenciales de inicio de sesión en Git:
Puede almacenar las credenciales de inicio de sesión en la memoria caché para no tener que escribirlas cada vez. Simplemente use este comando:

4.	git config --global credential.helper cache

Cómo inicializar un repositorio de Git:
Todo empieza desde aquí. El primer paso es inicializar un nuevo repositorio de Git localmente en la raíz de su proyecto. Puedes hacerlo con el siguiente comando:

5.	git init

Cómo agregar un archivo al área de preparación en Git:
El siguiente comando agregará un archivo al área de preparación. Simplemente reemplácelo filename_herecon el nombre del archivo que desea agregar al área de preparación.

6.	git add filename_here

Cómo agregar todos los archivos en el área de preparación en Git
Si desea agregar todos los archivos de su proyecto al área de preparación, puede usar un comodín .y se agregarán todos los archivos.

7.	git add .

Cómo agregar solo ciertos archivos al área de preparación en Git
Con el asterisco en el siguiente comando, puede agregar todos los archivos que comiencen con 'fil' en el área de preparación.

8.	git add fil*

Cómo verificar el estado de un repositorio en Git:
Este comando mostrará el estado del repositorio actual, incluidos los archivos preparados, no preparados y sin seguimiento.

9.	git status

Cómo confirmar cambios en el editor en Git:
Este comando abrirá un editor de texto en la terminal donde podrá escribir un mensaje de confirmación completo.

Un mensaje de confirmación se compone de un breve resumen de los cambios, una línea vacía y una descripción completa de los cambios posteriores.

10.	git commit

Cómo confirmar cambios con un mensaje en Git:
Puede agregar un mensaje de confirmación sin abrir el editor. Este comando solo le permite especificar un breve resumen para su mensaje de confirmación.

11.	git commit -m "your commit message here"

Cómo confirmar cambios (y omitir el área de preparación) en Git:
Puede agregar y confirmar archivos rastreados con un solo comando utilizando las opciones -a y -m.

12.	git commit -am "your commit message here"

Cómo ver tu historial de confirmaciones en Git:
Este comando muestra el historial de confirmaciones del repositorio actual:

13.	git log

Cómo ver su historial de confirmaciones, incluidos los cambios en Git:
Este comando muestra el historial de confirmación, incluidos todos los archivos y sus cambios:

14.	git log -p

Cómo ver una confirmación específica en Git:
Este comando muestra una confirmación específica.

Reemplace commit-id con la identificación de la confirmación que encontrará en el registro de confirmación después de la palabra confirmación.

15.	git show commit-id

Cómo ver las estadísticas de registro en Git:
Este comando hará que el registro de Git muestre algunas estadísticas sobre los cambios en cada confirmación, incluidas las líneas cambiadas y los nombres de los archivos.

16.	git log --stat

Cómo ver los cambios realizados antes de confirmarlos usando "diff" en Git:
Puede pasar un archivo como parámetro para ver solo los cambios en un archivo específico.

17.	git diff	muestra solo cambios no preparados de forma predeterminada.

Podemos llamar a diff con la --stagedbandera para ver cualquier cambio en etapas.

git diff
git diff all_checks.py
git diff --staged
Cómo ver cambios usando "git add -p":

Este comando abre un mensaje y le pregunta si desea realizar cambios o no, e incluye otras opciones.

18.	git add -p

Cómo eliminar archivos rastreados del árbol de trabajo actual en Git:
Este comando espera un mensaje de confirmación para explicar por qué se eliminó el archivo.

19.	git rm filename

Cómo cambiar el nombre de archivos en Git:
Este comando prepara los cambios y luego espera un mensaje de confirmación.

20.	git mv oldfile newfile

Cómo ignorar archivos en Git:
Crea un .gitignorearchivo y confírmalo.

Cómo revertir cambios no realizados en Git:
git checkout filename
Cómo revertir cambios por etapas en Git:
Puede utilizar el indicador de opción -p para especificar los cambios que desea restablecer.

git reset HEAD filename
git reset HEAD -p
Cómo modificar la confirmación más reciente en Git:
git commit --amendle permite modificar y agregar cambios a la confirmación más reciente.

git commit --amend
!! ¡¡Nota!!: arreglar una confirmación local con enmienda es genial y puedes enviarlo a un repositorio compartido después de haberlo arreglado. Pero debes evitar modificar confirmaciones que ya se hayan hecho públicas.

Cómo revertir la última confirmación en Git:
git revertcreará un nuevo compromiso que es lo opuesto a todo en el compromiso dado.
Podemos revertir la última confirmación usando el alias principal como este:

git revert HEAD
Cómo revertir una confirmación anterior en Git:
Puede revertir una confirmación anterior utilizando su ID de confirmación. Esto abre el editor para que pueda agregar un mensaje de confirmación.

git revert comit_id_here
Cómo crear una nueva rama en Git:
Por defecto, tienes una rama, la rama principal. Con este comando, puedes crear una nueva rama. Git no cambiará automáticamente; deberá hacerlo manualmente con el siguiente comando.

git branch branch_name
Cómo cambiar a una rama recién creada en Git:
Cuando desee utilizar una rama diferente o una recién creada, puede utilizar este comando:

git checkout branch_name
Cómo enumerar sucursales en Git:
Puede ver todas las ramas creadas usando el git branchcomando. Mostrará una lista de todas las sucursales y marcará la sucursal actual con un asterisco y la resaltará en verde.

git branch
Cómo crear una rama en Git y cambiar a ella inmediatamente:
Con un solo comando, puedes crear y cambiar a una nueva rama de inmediato.

git checkout -b branch_name
Cómo eliminar una rama en Git:
Cuando haya terminado de trabajar con una rama y la haya fusionado, puede eliminarla usando el siguiente comando:

git branch -d branch_name
Cómo fusionar dos ramas en Git:
Para fusionar el historial de la rama en la que se encuentra actualmente con branch_name, deberá usar el siguiente comando:

git merge branch_name
Cómo mostrar el registro de confirmación como un gráfico en Git:
Podemos usarlo --graphpara que el registro de confirmación se muestre como un gráfico. Además,
--onelinelimitará los mensajes de confirmación a una sola línea.

git log --graph --oneline
Cómo mostrar el registro de confirmación como un gráfico de todas las ramas en Git:
Hace lo mismo que el comando anterior, pero para todas las ramas.

git log --graph --oneline --all
Cómo cancelar una fusión conflictiva en Git:
Si desea descartar una combinación y comenzar de nuevo, puede ejecutar el siguiente comando:

git merge --abort
Cómo agregar un repositorio remoto en Git
Este comando agrega un repositorio remoto a su repositorio local (simplemente reemplácelo https://repo_herecon la URL de su repositorio remoto).

git add remote https://repo_here
Cómo ver URL remotas en Git:
Puede ver todos los repositorios remotos de su repositorio local con este comando:

git remote -v
Cómo obtener más información sobre un repositorio remoto en Git:
Simplemente reemplácelo origincon el nombre del control remoto obtenido ejecutando
el comando git remoto -v.

git remote show origin
Cómo enviar cambios a un repositorio remoto en Git:
Cuando todo su trabajo esté listo para guardarse en un repositorio remoto, puede enviar todos los cambios usando el siguiente comando:

git push
Cómo extraer cambios de un repositorio remoto en Git:
Si otros miembros del equipo están trabajando en su repositorio, puede recuperar los últimos cambios realizados en el repositorio remoto con el siguiente comando:

git pull
Cómo comprobar las sucursales remotas que Git está rastreando:
Este comando muestra el nombre de todas las ramas remotas que Git está rastreando para el repositorio actual:

git branch -r

Cómo recuperar cambios de repositorio remoto en Git:
Este comando descargará los cambios desde un repositorio remoto pero no realizará una fusión en su sucursal local (ya que git pull lo hace).

git fetch
Cómo verificar el registro de confirmaciones actual de un repositorio remoto en Git
Confirmación tras confirmación, Git crea un registro. Puede encontrar el registro del repositorio remoto usando este comando:

git log origin/main
Cómo fusionar un repositorio remoto con su repositorio local en Git:
Si el repositorio remoto tiene cambios que desea fusionar con su local, este comando lo hará por usted:

git merge origin/main
Cómo obtener el contenido de ramas remotas en Git sin fusionarlos automáticamente:
Esto le permite actualizar el control remoto sin fusionar ningún contenido en las
sucursales locales. Puedes llamar a git merge o git checkout para realizar la fusión.

git remote update
Cómo enviar una nueva rama a un repositorio remoto en Git:
Si desea enviar una rama a un repositorio remoto, puede usar el siguiente comando. Solo recuerda agregar -u para crear la rama en sentido ascendente:

git push -u origin branch_name

Cómo eliminar una rama remota en Git:
Si ya no necesita una rama remota, puede eliminarla usando el siguiente comando:

git push --delete origin branch_name_here
Cómo utilizar la rebase de Git:
Puedes transferir el trabajo completado de una rama a otra usando git rebase.

git rebase branch_name_here
Git Rebase puede resultar muy complicado si no lo haces correctamente. Antes de usar este comando te sugiero que vuelvas a leer la documentación oficial aquí.

Cómo ejecutar rebase de forma interactiva en Git:
Puedes ejecutar git rebase de forma interactiva usando el indicador -i.
Abrirá el editor y presentará un conjunto de comandos que puede usar.

git rebase -i master
# p, pick = use commit
# r, reword = use commit, but edit the commit message
# e, edit = use commit, but stop for amending
# s, squash = use commit, but meld into previous commit
# f, fixup = like "squash", but discard this commit's log message
# x, exec = run command (the rest of the line) using shell
# d, drop = remove commit
Cómo forzar una solicitud push en Git:
Este comando forzará una solicitud de inserción. Esto suele estar bien para las ramas de solicitud de extracción porque nadie más debería haberlas clonado.
Pero esto no es algo que quieras hacer con los repositorios públicos.

git push -f